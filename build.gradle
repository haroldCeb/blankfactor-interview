buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "net.serenity-bdd:serenity-gradle-plugin:4.2.33"
        classpath "net.serenity-bdd:serenity-single-page-report:4.2.33"
        classpath "com.azure:azure-storage-blob:12.25.1"
    }
}

plugins {
    id "net.serenity-bdd.serenity-gradle-plugin" version "4.2.33"
    id 'java'
    id 'eclipse'
    id 'idea'
    id "org.sonarqube" version "4.0.0.2929"
}

defaultTasks 'clean', 'test', 'aggregate'

repositories {
    mavenCentral()
}

sourceCompatibility = '21'
targetCompatibility = '21'

ext {
    slf4jVersion = '1.7.7'
    serenityCoreVersion = '4.2.34'
    serenityCucumberVersion = '4.2.34'
    junitVersion = '5.9.2'
    assertJVersion = '3.8.0'
    logbackVersion = '1.4.6'
    lombokVersion = '1.18.30'
}

dependencies {
    implementation "net.serenity-bdd:serenity-core:${serenityCoreVersion}",
            "net.serenity-bdd:serenity-junit5:${serenityCoreVersion}",
            "org.junit.jupiter:junit-jupiter-api:${junitVersion}",
            "org.junit.jupiter:junit-jupiter-engine:${junitVersion}",
            "org.assertj:assertj-core:${assertJVersion}",
            "org.projectlombok:lombok:${lombokVersion}",
            "ch.qos.logback:logback-classic:${logbackVersion}",

            "net.serenity-bdd:serenity-cucumber:${serenityCucumberVersion}",
            "net.serenity-bdd:serenity-screenplay:${serenityCoreVersion}",
            "net.serenity-bdd:serenity-screenplay-webdriver:${serenityCoreVersion}",
            "net.serenity-bdd:serenity-screenplay-rest:${serenityCoreVersion}",
            "net.serenity-bdd:serenity-ensure:${serenityCoreVersion}"
    implementation 'io.rest-assured:rest-assured:5.4.0'
    implementation 'io.rest-assured:json-schema-validator:4.5.1'

    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testCompileOnly 'junit:junit:4.13.1'


    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.vintage:junit-vintage-engine:5.4.0'

    implementation 'io.cucumber:cucumber-java:7.15.0'
    testImplementation 'io.cucumber:cucumber-junit:7.15.0'
    implementation 'io.cucumber:cucumber-core:7.15.0'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.16.1'


    implementation 'org.junit.platform:junit-platform-launcher:1.11.4'
    implementation 'org.junit.platform:junit-platform-suite:1.11.4'
    implementation 'org.junit.jupiter:junit-jupiter-engine:5.11.4'
    implementation 'io.cucumber:cucumber-junit-platform-engine:7.20.1'


    testImplementation 'org.junit.jupiter:junit-jupiter:5.10.0'
}

test {
    String executionType = System.properties['ExecutionTypeSingle']
    systemProperty 'environment', System.properties['environment']
    systemProperty "ExecutionTypeSingle", executionType
    useJUnit()

    switch (executionType) {

        case "@blank-factor-homework":
            include('**/BlankFactorHomePageTestRunner.class*')
            maxParallelForks = 1
            break

    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

gradle.startParameter.continueOnFailure = true
